{"is_source_file": true, "format": "TypeScript", "description": "This file contains core game logic functions for a Tic Tac Toe game, including evaluation of the game state, move validation and application, switch turns, and board reset functionality.", "external_files": ["./types", "../validation", "../audit/logger"], "external_methods": ["validateBoard", "validateMoveIndex", "validatePlayer", "createEmptyBoard", "safeLogAction"], "published": ["evaluateBoard", "availableMoves", "isLegalMove", "applyMove", "nextPlayer", "resetBoard"], "classes": [], "methods": [{"name": "export function evaluateBoard(board: Board): GameOutcome { evaluateBoard", "description": "Determines the current outcome of the board, identifying a winner or a draw.", "scope": "", "scopeKind": ""}, {"name": "export function availableMoves(board: Board): number[] { availableMoves", "description": "Returns a list of indices representing empty cells where moves can be made.", "scope": "", "scopeKind": ""}, {"name": "export function isLegalMove(board: Board, index: number): boolean { isLegalMove", "description": "Checks if a move at a given index is legal (inside bounds and cell unoccupied).", "scope": "", "scopeKind": ""}, {"name": "export function applyMove(board: Board, move: Move): Board { applyMove", "description": "Returns a new board state after applying a move if legal, logs the move; throws error if invalid.", "scope": "", "scopeKind": ""}, {"name": "export function nextPlayer(p: Player): Player { nextPlayer", "description": "Switches the current player from 'X' to 'O' or vice versa.", "scope": "", "scopeKind": ""}, {"name": "export function resetBoard(): Board { resetBoard", "description": "Resets the game board to an empty state and logs the reset action.", "scope": "", "scopeKind": ""}], "calls": ["validateBoard", "validateMoveIndex", "validatePlayer", "createEmptyBoard", "safeLogAction"], "search-terms": ["evaluateBoard", "applyMove", "nextPlayer", "resetBoard", "WIN_LINES", "GameOutcome", "validateMoveIndex"], "state": 2, "file_id": 13, "knowledge_revision": 27, "git_revision": "", "ctags": [{"_type": "tag", "name": "WIN_LINES", "path": "/home/kavia/workspace/code-generation/web-tictactoe-game-210337-210347/tictactoe_frontend/src/lib/game/logic.ts", "pattern": "/^const WIN_LINES: number[][] = [$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "a", "path": "/home/kavia/workspace/code-generation/web-tictactoe-game-210337-210347/tictactoe_frontend/src/lib/game/logic.ts", "pattern": "/^    const v = board[a];$/", "language": "TypeScript", "kind": "constant", "scope": "evaluateBoard", "scopeKind": "function"}, {"_type": "tag", "name": "a", "path": "/home/kavia/workspace/code-generation/web-tictactoe-game-210337-210347/tictactoe_frontend/src/lib/game/logic.ts", "pattern": "/^  for (const [a, b, c] of WIN_LINES) {$/", "language": "TypeScript", "kind": "constant", "scope": "evaluateBoard", "scopeKind": "function"}, {"_type": "tag", "name": "after", "path": "/home/kavia/workspace/code-generation/web-tictactoe-game-210337-210347/tictactoe_frontend/src/lib/game/logic.ts", "pattern": "/^  const after = createEmptyBoard();$/", "language": "TypeScript", "kind": "constant", "scope": "resetBoard", "scopeKind": "function"}, {"_type": "tag", "name": "applyMove", "path": "/home/kavia/workspace/code-generation/web-tictactoe-game-210337-210347/tictactoe_frontend/src/lib/game/logic.ts", "pattern": "/^export function applyMove(board: Board, move: Move): Board {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "availableMoves", "path": "/home/kavia/workspace/code-generation/web-tictactoe-game-210337-210347/tictactoe_frontend/src/lib/game/logic.ts", "pattern": "/^export function availableMoves(board: Board): number[] {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "b", "path": "/home/kavia/workspace/code-generation/web-tictactoe-game-210337-210347/tictactoe_frontend/src/lib/game/logic.ts", "pattern": "/^  for (const [a, b, c] of WIN_LINES) {$/", "language": "TypeScript", "kind": "constant", "scope": "evaluateBoard", "scopeKind": "function"}, {"_type": "tag", "name": "before", "path": "/home/kavia/workspace/code-generation/web-tictactoe-game-210337-210347/tictactoe_frontend/src/lib/game/logic.ts", "pattern": "/^  const before = [...board];$/", "language": "TypeScript", "kind": "constant", "scope": "applyMove", "scopeKind": "function"}, {"_type": "tag", "name": "before", "path": "/home/kavia/workspace/code-generation/web-tictactoe-game-210337-210347/tictactoe_frontend/src/lib/game/logic.ts", "pattern": "/^  const before = createEmptyBoard();$/", "language": "TypeScript", "kind": "constant", "scope": "resetBoard", "scopeKind": "function"}, {"_type": "tag", "name": "c", "path": "/home/kavia/workspace/code-generation/web-tictactoe-game-210337-210347/tictactoe_frontend/src/lib/game/logic.ts", "pattern": "/^  for (const [a, b, c] of WIN_LINES) {$/", "language": "TypeScript", "kind": "constant", "scope": "evaluateBoard", "scopeKind": "function"}, {"_type": "tag", "name": "evaluateBoard", "path": "/home/kavia/workspace/code-generation/web-tictactoe-game-210337-210347/tictactoe_frontend/src/lib/game/logic.ts", "pattern": "/^export function evaluateBoard(board: Board): GameOutcome {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "isDraw", "path": "/home/kavia/workspace/code-generation/web-tictactoe-game-210337-210347/tictactoe_frontend/src/lib/game/logic.ts", "pattern": "/^  const isDraw = board.every((c) => c !== null);$/", "language": "TypeScript", "kind": "constant", "scope": "evaluateBoard", "scopeKind": "function"}, {"_type": "tag", "name": "isLegalMove", "path": "/home/kavia/workspace/code-generation/web-tictactoe-game-210337-210347/tictactoe_frontend/src/lib/game/logic.ts", "pattern": "/^export function isLegalMove(board: Board, index: number): boolean {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "next", "path": "/home/kavia/workspace/code-generation/web-tictactoe-game-210337-210347/tictactoe_frontend/src/lib/game/logic.ts", "pattern": "/^  const next = [...board];$/", "language": "TypeScript", "kind": "constant", "scope": "applyMove", "scopeKind": "function"}, {"_type": "tag", "name": "nextPlayer", "path": "/home/kavia/workspace/code-generation/web-tictactoe-game-210337-210347/tictactoe_frontend/src/lib/game/logic.ts", "pattern": "/^export function nextPlayer(p: Player): Player {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "resetBoard", "path": "/home/kavia/workspace/code-generation/web-tictactoe-game-210337-210347/tictactoe_frontend/src/lib/game/logic.ts", "pattern": "/^export function resetBoard(): Board {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "result", "path": "/home/kavia/workspace/code-generation/web-tictactoe-game-210337-210347/tictactoe_frontend/src/lib/game/logic.ts", "pattern": "/^  const result: number[] = [];$/", "language": "TypeScript", "kind": "constant", "scope": "availableMoves", "scopeKind": "function"}, {"_type": "tag", "name": "v", "path": "/home/kavia/workspace/code-generation/web-tictactoe-game-210337-210347/tictactoe_frontend/src/lib/game/logic.ts", "pattern": "/^    const v = board[a];$/", "language": "TypeScript", "kind": "constant", "scope": "evaluateBoard", "scopeKind": "function"}], "hash": "8dfc697b0b58fe95cf2c16e6b3ae396f", "format-version": 4, "code-base-name": "tictactoe_frontend", "filename": "tictactoe_frontend/src/lib/game/logic.ts", "revision_history": [{"27": ""}]}